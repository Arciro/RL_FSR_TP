<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from ddr_bot.xacro                  | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="differential_drive_robot">
  <!--xacro:property name="hokuyoOffsetZ" value="0.1125"/-->
  <material name="black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  <material name="blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>
  <material name="green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>
  <material name="grey">
    <color rgba="0.2 0.2 0.2 1.0"/>
  </material>
  <material name="light_grey">
    <color rgba="0.6 0.6 0.6 1"/>
  </material>
  <material name="dark_grey">
    <color rgba="0.3 0.3 0.3 1"/>
  </material>
  <material name="orange">
    <color rgba="1.0 0.4235294117647059 0.0392156862745098 1.0"/>
  </material>
  <material name="brown">
    <color rgba="0.8705882352941177 0.8117647058823529 0.7647058823529411 1.0"/>
  </material>
  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <!-- ros_control plugin 
  <gazebo>
    <plugin name="gazebo_ros_control"  filename="libgazebo_ros_control.so">
      <robotNamespace>$(arg robot_namespace)</robotNamespace>
      <robotParam>/robot_description</robotParam>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo>-->
  <!--
    The plugin broadcasts a body's pose and rates through ROS nav_msgs::Odometry message.
    The plugin broadcasts pose and rate of a body named "chassis" over ROS topic name "my_robot/odom".-->
  <!--
  <gazebo>
    <plugin name="ground_truth" filename="libgazebo_ros_p3d.so">
      <frameName>map</frameName>
      <bodyName>chassis</bodyName>
      <topicName>$(arg robot_namespace)/second_odom</topicName>
      <updateRate>30.0</updateRate>
      <gaussianNoise>0.0</gaussianNoise>
    </plugin>
  </gazebo>
-->
  <!-- Chassis -->
  <gazebo reference="chassis">
    <mu1>0.3</mu1>
    <mu2>0.3</mu2>
    <material>Gazebo/Blue</material>
  </gazebo>
  <!-- Caster wheel -->
  <gazebo reference="caster_wheel">
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
      <robotNamespace>/ddr</robotNamespace>
      <!-- una volta specificato qui non lo dovrai 
      																				poi fare per i topic cmd_vel e odom -->
      <alwaysOn>true</alwaysOn>
      <updateRate>100</updateRate>
      <leftJoint>left_wheel_hinge</leftJoint>
      <rightJoint>right_wheel_hinge</rightJoint>
      <wheelSeparation>0.045</wheelSeparation>
      <wheelDiameter>0.064</wheelDiameter>
      <torque>20</torque>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <!-- ti conviene metterla sempre come odom-->
      <robotBaseFrame>base_footprint</robotBaseFrame>
      <!--mi raccomando questa scelta influenzerà le successive come terna base-->
      <legacyMode>true</legacyMode>
      <publishOdomTF>true</publishOdomTF>
      <rosDebugLevel>Debug</rosDebugLevel>
      <publishWheelTF>true</publishWheelTF>
      <publishWheelJointState>true</publishWheelJointState>
      <wheelAcceleration>1</wheelAcceleration>
      <!-- basse accelerazioni impediscono grossi slittamenti -->
      <wheelTorque>20</wheelTorque>
      <publishTf>1</publishTf>
      <odometrySource>world</odometrySource>
    </plugin>
  </gazebo>
  <!--  -->
  <gazebo reference="camera_link">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Green</material>
    <sensor name="camera1" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>/</cameraName>
        <!--il prefisso viene aggiunto qui, quindi non devi aggiungerli dopo ddr/camera1 -->
        <imageTopicName>image</imageTopicName>
        <!-- non c'è bisogno di modificarli-->
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <!-- hokuyo -->
  <gazebo reference="hokuyo_link">
    <!-- Don't use type="gpu_ray" -->
    <!-- -->
    <sensor name="head_hokuyo_sensor" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_head_hokuyo_controller">
        <topicName>/ddr/laser/scan</topicName>
        <!-- qua lo puoi scegliere come vuoi ma attento 
        														 che devi dare lo stesso nome anche in gmapping-->
        <frameName>base_footprint</frameName>
        <!-- conviene dare il nome della terna base per far visualizzare la mappa-->
        <!-- <frameName>hokuyo_link</frameName>-->
      </plugin>
    </sensor>
  </gazebo>
  <!-- IMU plugin 
  <gazebo>
    <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
      <alwaysOn>true</alwaysOn>
      <bodyName>chassis</bodyName>
      <topicName>/ddr/imu</topicName>
      <serviceName>imu_service</serviceName>
      <gaussianNoise>0.0</gaussianNoise>
      <updateRate>20.0</updateRate>
    </plugin>
  </gazebo>-->
  <!--qui definiamo le inerzie dei solidi geometrici-->
  <!-- Robot constants and properties
  <xacro:include filename="$(find ddr_pkg)/urdf/properties.xacro" /> -->
  <!-- Inertia matrices 
  <xacro:include filename="$(find ddr_pkg)/urdf/macros.xacro" />-->
  <!-- Gazebo aspects of the robot 
  <xacro:include filename="$(find ddr_pkg)/urdf/my_ddr.gazebo" />-->
  <!-- Camera Link -->
  <link name="camera_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.04                     0.08                     0.03"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.04                     0.08                     0.03"/>
      </geometry>
      <material name="green"/>
    </visual>
    <inertial>
      <mass value="0.01"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="6.083333333333333e-06" ixy="0" ixz="0" iyy="2.0833333333333334e-06" iyz="0" izz="6.6666666666666675e-06"/>
      <!--ho corretto un errore-->
    </inertial>
  </link>
  <joint name="camera_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin rpy="0 0 0" xyz="0.1 0 0.06"/>
    <parent link="chassis"/>
    <child link="camera_link"/>
  </joint>
  <!-- Hokuyo Joint -->
  <joint name="hokuyo_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin rpy="0 0 0" xyz="0.035 0 0.1135"/>
    <parent link="chassis"/>
    <child link="hokuyo_link"/>
  </joint>
  <!-- Hokuyo Laser -->
  <link name="hokuyo_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.05                     0.05                     0.07"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://ddr_pkg/meshes/hokuyo.dae"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="0.01"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="6.166666666666667e-06" ixy="0" ixz="0" iyy="6.166666666666667e-06" iyz="0" izz="4.166666666666668e-06"/>
      <!--ho corretto un errore-->
    </inertial>
  </link>
  <!-- Used for fixing robot to Gazebo 'chassis' -->
  <link name="base_footprint"/>
  <joint name="base_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="chassis"/>
  </joint>
  <link name="chassis">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.032"/>
      <geometry>
        <mesh filename="package://ddr_pkg/meshes/chassis.dae"/>
      </geometry>
      <material name="blue"/>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0.032"/>
      <geometry>
        <mesh filename="package://ddr_pkg/meshes/chassis.dae"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.032"/>
      <mass value="0.15"/>
      <inertia ixx="0.00022552862499999998" ixy="0" ixz="0" iyy="0.000538566125" iyz="0" izz="0.0006670625"/>
      <!--ho corretto un errore-->
    </inertial>
  </link>
  <joint name="caster_joint" type="fixed">
    <parent link="chassis"/>
    <child link="caster_wheel"/>
  </joint>
  <link name="caster_wheel">
    <collision>
      <origin rpy="0 0 0" xyz="0.091 0 0.042"/>
      <geometry>
        <mesh filename="package://ddr_pkg/meshes/caster_wheel.dae"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0.091 0 0.042"/>
      <geometry>
        <mesh filename="package://ddr_pkg/meshes/caster_wheel.dae"/>
      </geometry>
    </visual>
    <inertial>
      <origin rpy="0 0 0" xyz="0.091 0 0.042"/>
      <mass value="0.09"/>
      <inertia ixx="1.5876000000000002e-05" ixy="0" ixz="0" iyy="1.5876000000000002e-05" iyz="0" izz="1.5876000000000002e-05"/>
    </inertial>
  </link>
  <link name="left_wheel">
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.026" radius="0.032"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://ddr_pkg/meshes/left_wheel.dae"/>
      </geometry>
    </visual>
    <inertial>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <mass value="0.05"/>
      <inertia ixx="1.5616666666666666e-05" ixy="0" ixz="0" iyy="1.5616666666666666e-05" iyz="0" izz="2.5600000000000002e-05"/>
    </inertial>
  </link>
  <gazebo reference="left_wheel">
    <mu1 value="1.0"/>
    <mu2 value="1.0"/>
    <kp value="10000000.0"/>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <!--<kd  value="1.0" />
      <fdir1 value="1 0 0"/>-->
    <material>Gazebo/FlatBlack</material>
  </gazebo>
  <joint name="left_wheel_hinge" type="continuous">
    <parent link="chassis"/>
    <child link="left_wheel"/>
    <origin rpy="0 0 0" xyz="0 0.063 0.032"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <!--limit effort="0" velocity="0"/-->
    <limit effort="100.0" velocity="10.0"/>
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>
  <!--
  http://gazebosim.org/tutorials/?tut=ros_control
-->
  <transmission name="left_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_wheel_hinge">
      <!---->
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_wheel_motor">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>10</mechanicalReduction>
      <!--mechanicalReduction>1</mechanicalReduction-->
    </actuator>
  </transmission>
  <link name="right_wheel">
    <collision>
      <origin rpy="-1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.026" radius="0.032"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="-1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://ddr_pkg/meshes/right_wheel.dae"/>
      </geometry>
    </visual>
    <inertial>
      <origin rpy="-1.5707963267948966 0 0" xyz="0 0 0"/>
      <mass value="0.05"/>
      <inertia ixx="1.5616666666666666e-05" ixy="0" ixz="0" iyy="1.5616666666666666e-05" iyz="0" izz="2.5600000000000002e-05"/>
    </inertial>
  </link>
  <gazebo reference="right_wheel">
    <mu1 value="1.0"/>
    <mu2 value="1.0"/>
    <kp value="10000000.0"/>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <!--<kd  value="1.0" />
      <fdir1 value="1 0 0"/>-->
    <material>Gazebo/FlatBlack</material>
  </gazebo>
  <joint name="right_wheel_hinge" type="continuous">
    <parent link="chassis"/>
    <child link="right_wheel"/>
    <origin rpy="0 0 0" xyz="0 -0.063 0.032"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <!--limit effort="0" velocity="0"/-->
    <limit effort="100.0" velocity="10.0"/>
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>
  <!--
  http://gazebosim.org/tutorials/?tut=ros_control
-->
  <transmission name="right_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_wheel_hinge">
      <!---->
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="right_wheel_motor">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>10</mechanicalReduction>
      <!--mechanicalReduction>1</mechanicalReduction-->
    </actuator>
  </transmission>
</robot>

